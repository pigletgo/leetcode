Given a string containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

  Open brackets must be closed by the same type of brackets.
  Open brackets must be closed in the correct order.
  Note that an empty string is also considered valid.

Example 1:

  Input: "()"
  Output: true
  Example 2:

  Input: "()[]{}"
  Output: true
  Example 3:

  Input: "(]"
  Output: false
  Example 4:

  Input: "([)]"
  Output: false
  Example 5:

  Input: "{[]}"
  Output: true
  
import java.util.Stack;

public class Solution {

        public boolean isValid(String s) {

                Stack<Character> st = new Stack<>();
                for (int i = 0 ; i < s.length() ; i ++){
                        char c = s.charAt(i);

                        if (c == '[' || c == '{' || c == '(')
                                st.push(c);
                        else{
                                if (st.isEmpty())
                                        return false;

                                char topChar = st.pop();
                                if (c == ']' && topChar != '[')
                                        return false;
                                if (c == '}' && topChar != '{')
                                        return false;
                                if (c == ')' && topChar != '(')
                                        return false;
                        }
                }

                return st.isEmpty();

        }

}
