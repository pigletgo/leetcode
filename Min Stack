
Design a stack that supports push, pop, top, and retrieving the minimum element in constant time.

	push(x) -- Push element x onto stack.
	pop() -- Removes the element on top of the stack.
	top() -- Get the top element.
	getMin() -- Retrieve the minimum element in the stack.
Example:
	MinStack minStack = new MinStack();
	minStack.push(-2);
	minStack.push(0);
	minStack.push(-3);
	minStack.getMin();   --> Returns -3.
	minStack.pop();
	minStack.top();      --> Returns 0.
	minStack.getMin();   --> Returns -2.
	
	,,,java
import java.util.Stack;
class MinStack {

    private Stack<Integer> stack;
    private Stack<Integer> minstack;

    /** initialize your data structure here. */
    public MinStack() {
        stack = new Stack<>();
        minstack = new Stack<>();
    }

    public void push(int x) {

        if (minstack.isEmpty() || x <= minstack.peek())
            minstack.push(x);

        stack.push(x);
    }

    public void pop() {
        if (stack.peek().equals(minstack.peek()))
            minstack.pop();

        stack.pop();
    }

    public int top() {

        return stack.pop();
    }

    public int getMin() {
        return minstack.pop();
    }
    public String toString(){
        StringBuilder res = new StringBuilder();
        res.append("[");
        for (int i = 0 ; i < stack.size() ; i ++){
            res.append(stack.get(i));
            if (i < stack.size())
                res.append(",");
        }
        res.append("]");
        return res.toString();
    }

    public static void main(String[] args){


        MinStack minStack = new MinStack();
        minStack.push(-2);
        minStack.push(0);
        minStack.push(-3);
        System.out.println(minStack);
        minStack.getMin();
        System.out.println(minStack);
        minStack.pop();
        System.out.println(minStack);
        minStack.top();
        System.out.println(minStack);
        minStack.getMin();
        System.out.println(minStack);
    }
}


/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack obj = new MinStack();
 * obj.push(x);
 * obj.pop();
 * int param_3 = obj.top();
 * int param_4 = obj.getMin();
 */
	
	,,,
